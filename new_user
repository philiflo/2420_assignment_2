#!/bin/bash

# This is a script that automates basic commands to configure a new user in an Arch Linux server

# Ensures that this user runs this with sudo privileges
if [ "$EUID" -ne 0 ]; then
    echo "This script must be run as root!" >&2
    exit 1
fi

# Prompts the user for inputs for a username, path to desired shell and additional groups 
read -p "Enter username: " username
read -p "Enter absolute path to your shell (e.g., /bin/bash): " shell
read -p "Enter additional needed groups (primary default group is \"$username\"): " groups


# Set the users home directory
home_dir="/home/$username"


# This statement checks if the home directory has been successfully created, then make the new directory, if it already exits then return an error
if [ -d "$home_dir" ]; then
    echo "Directory $home_dir already exists!" >&2
    exit 1
else 
    mkdir -p "$home_dir"
    echo "Directory $home_dir has been created!"
fi


# 
useradd -m -d "$home_dir" -s "$shell" "$username"
if [ $? -ne 0 ]; then
    echo "Error creating user $username" >&2
    exit 1
fi
echo "User $username has been added."

# Copy /etc/skel contents to the home directory
cp -r /etc/skel/. "$home_dir"
if [ $? -ne 0 ]; then
    echo "Error copying files to $home_dir" >&2
    exit 1
fi

# Set the userâ€™s password
echo "Setting password for user $username"
passwd "$username"

# Add user to additional groups if specified
if [ -n "$groups" ]; then
    for group in $(echo "$groups" | tr ',' '\n'); do
        usermod -aG "$group" "$username"
    done
fi

echo "User $username created with shell $shell, home directory$home_dir, and groups $groups."


